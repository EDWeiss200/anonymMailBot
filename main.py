import telebot
import sqlite3
import random
import string


# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN' –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
#bot_token = '7621465144:AAH22TzgDIAMM6SoEcv1NxpbTjLWJ_Z5fkA'
bot_token = input('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API TOKEN –±–æ—Ç–∞:')
bot = telebot.TeleBot(bot_token)

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_ADMIN_CHAT_ID' –Ω–∞ ID —á–∞—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
#ADMIN_CHAT_ID = -4521299845 # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à ID
ADMIN_CHAT_ID = input('–í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ –∞–¥–º–∏–Ω:')
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}




# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
answer_button = telebot.types.InlineKeyboardMarkup()
answer_button.add(telebot.types.InlineKeyboardButton(text="–û—Ç–≤–µ—Ç–∏—Ç—å", callback_data="answer"))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
def generate_unique_code():
 return ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    if message.chat.id == ADMIN_CHAT_ID:
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ —á–∞—Ç–∞

    args = message.text.split()

    # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = message.from_user.id
    username = message.from_user.username if message.from_user.username else 'None'

    # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–æ–¥ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /start, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if len(args) > 1:  # –ö–æ–¥ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç
        unique_code = args[1]
        conn = sqlite3.connect('users.db')
        with conn:
            cursor = conn.cursor()

            # –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É –∫–æ–¥—É
            cursor.execute('SELECT user_id FROM users WHERE code = ?', (unique_code,))
            result = cursor.fetchone()

            if result:
                receiver_id = result[0]

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º, —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                user_states[user_id] = receiver_id

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é, —á—Ç–æ —Ç–µ–ø–µ—Ä—å –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã
                bot.send_message(user_id, "–í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
            else:
                bot.send_message(user_id, "–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞,–ø–æ–ø—Ä–æ—Å–∏—Ç–µ —Å—Å—ã–ª–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    # –ï—Å–ª–∏ –∫–æ–¥–∞ –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    else:
        conn = sqlite3.connect('users.db')
        with conn:
            cursor = conn.cursor()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥
            cursor.execute('SELECT code FROM users WHERE user_id = ?', (user_id,))
            result = cursor.fetchone()

            if result:
                unique_code = result[0]
            else:
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥
                unique_code = generate_unique_code()
                cursor.execute('INSERT INTO users (user_id, username, code) VALUES (?, ?, ?)', (user_id, username, unique_code))
                conn.commit()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
        bot.send_message(user_id, f"–ü—Ä–∏–≤–µ—Çüëã, —è –±–æ—Ç –¢–µ—Å—Ç–°–∫–∞–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.–í–æ—Ç —Ç–≤–æ—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: "
                                  f"https://t.me/anonsendrecv_bot?start={unique_code}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
@bot.message_handler(content_types=['text'])
def handle_anonymous_message(message):
  print(user_states)
  if message.chat.id == ADMIN_CHAT_ID:
    return # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ —á–∞—Ç–∞
  
  sender_id = message.from_user.id
  receiver_id = user_states.get(sender_id)

  if receiver_id == sender_id:
    bot.send_message(sender_id, f"–í–ù–ò–ú–ê–ù–ò–ï, –≤—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ! –ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –µ–≥–æ —Å—Å—ã–ª–∫–µ")
    return

  if receiver_id is not None:
    msg_text = message.text

    conn = sqlite3.connect('users.db')
    with conn:
      cursor = conn.cursor()

      # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
      cursor.execute("SELECT username FROM users WHERE user_id = ?", (receiver_id,))
      receiver_username = cursor.fetchone()
      if receiver_username:
        receiver_username = receiver_username[0]

      # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É 'message'
        
      try:
        cursor.execute("""
          INSERT INTO messages (sender_id, sender_username, receiver_id, receiver_username, message, is_reply) 
          VALUES (?, ?, ?, ?, ?, ?)
        """, (sender_id, message.from_user.username, receiver_id, receiver_username, msg_text, 0)) # is_reply = 0 for original messages
        conn.commit()
      except sqlite3.Error as e:
        print(f"Database error (text): {e}")


    if message.from_user.id == user_states.get(receiver_id):
      bot.send_message(receiver_id, f"–í–∞–º –æ—Ç–≤–µ—Ç–∏–ª–∏")
      bot.send_message(receiver_id, f"–û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ {msg_text}")
      if receiver_id != ADMIN_CHAT_ID:
        bot.send_message(ADMIN_CHAT_ID, f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username} (ID: {sender_id}) –∫ @{receiver_username} (ID: {receiver_id}):\n{msg_text}")
      else:
        bot.send_message(ADMIN_CHAT_ID, f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username} (ID: {sender_id}) –∫ #–ü—Ä–æ—Å–ª—É—à–∫–∞–ë–°–û–®1:\n{msg_text}")
     
      del user_states[sender_id]
      del user_states[receiver_id]
      return
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—é
    bot.send_message(receiver_id, f"–£ –≤–∞—Å –Ω–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{msg_text}", reply_markup=answer_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é
    bot.send_message(sender_id, f"–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ!")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    if receiver_id != ADMIN_CHAT_ID:
      bot.send_message(ADMIN_CHAT_ID, f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username} (ID: {sender_id}) –∫ @{receiver_username} (ID: {receiver_id}):\n{msg_text}")
    else:
      bot.send_message(ADMIN_CHAT_ID, f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username} (ID: {sender_id}) –∫ #–ü—Ä–æ—Å–ª—É—à–∫–∞–ë–°–û–®1:\n{msg_text}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
@bot.message_handler(content_types=['photo'])
def handle_photo_message(message):
  print(user_states)
  if message.chat.id == ADMIN_CHAT_ID:
    return # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ —á–∞—Ç–∞

  sender_id = message.from_user.id
  receiver_id = user_states.get(sender_id)

  if receiver_id == sender_id:
    bot.send_message(sender_id, f"–í–ù–ò–ú–ê–ù–ò–ï, –≤—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ! –ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –µ–≥–æ —Å—Å—ã–ª–∫–µ")
    return

  if receiver_id == ADMIN_CHAT_ID:
    receiver_id = '–ë–∏—á—É—Ä—Å–∫–∞—è –®–ö–û–õ–ê 1' # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–µ–∫—Å—Ç

  if receiver_id is not None:
    file_id = message.photo[-1].file_id
    caption = message.caption or ""

    conn = sqlite3.connect('users.db')
    with conn:
      cursor = conn.cursor()

      # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
      cursor.execute("SELECT username FROM users WHERE user_id = ?", (receiver_id,))
      receiver_username = cursor.fetchone()
      if receiver_username:
        receiver_username = receiver_username[0]

      # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É 'message'


    if message.from_user.id == user_states.get(receiver_id):
      bot.send_message(receiver_id, f"–í–∞–º –æ—Ç–≤–µ—Ç–∏–ª–∏")
      bot.send_photo(receiver_id,message.photo[-1].file_id, caption=f'–û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {caption}')
      if receiver_id != ADMIN_CHAT_ID:
        bot.send_photo(ADMIN_CHAT_ID, message.photo[-1].file_id,caption=f"–§–æ—Ç–æ –æ—Ç @{message.from_user.username} (ID: {sender_id}) –∫ @{receiver_username} (ID: {receiver_id})")
      else:
        bot.send_photo(ADMIN_CHAT_ID,message.photo[-1].file_id, caption=f"–§–æ—Ç–æ –æ—Ç @{message.from_user.username} (ID: {sender_id}) –∫ #–ü—Ä–æ—Å–ª—É—à–∫–∞–ë–°–û–®1:")

      del user_states[receiver_id]
      return
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—é
    bot.send_photo(receiver_id, message.photo[-1].file_id, caption=f'–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Ñ–æ—Ç–æ: {caption}',reply_markup=answer_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é
    bot.send_message(sender_id, "–í–∞—à–µ —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    if receiver_id != ADMIN_CHAT_ID:
      bot.send_photo(ADMIN_CHAT_ID, message.photo[-1].file_id,caption=f"–§–æ—Ç–æ –æ—Ç @{message.from_user.username} (ID: {sender_id}) –∫ @{receiver_username} (ID: {receiver_id})")
    else:
      bot.send_photo(ADMIN_CHAT_ID,message.photo[-1].file_id, caption=f"–§–æ—Ç–æ –æ—Ç @{message.from_user.username} (ID: {sender_id}) –∫ #–ü—Ä–æ—Å–ª—É—à–∫–∞–ë–°–û–®1:")



@bot.message_handler(content_types=['sticker'])
def handle_sticker_message(message):
  if message.chat.id == ADMIN_CHAT_ID:
    return

  sender_id = message.from_user.id
  receiver_id = user_states.get(sender_id)

  if receiver_id is None or receiver_id == sender_id:
    bot.send_message(sender_id, "–í–ù–ò–ú–ê–ù–ò–ï, –≤—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ! –ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –µ–≥–æ —Å—Å—ã–ª–∫–µ")
    return

  sticker_file_id = message.sticker.file_id
  conn = sqlite3.connect('users.db')
  with conn:
    cursor = conn.cursor()
    cursor.execute("SELECT username FROM users WHERE user_id = ?", (receiver_id,))
    receiver_username = cursor.fetchone()
    if receiver_username:
      receiver_username = receiver_username[0]



  if message.from_user.id == user_states.get(receiver_id):
      bot.send_message(receiver_id, f"–í–∞–º –æ—Ç–≤–µ—Ç–∏–ª–∏. –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ:")
      bot.send_sticker(receiver_id, sticker_file_id)
      if receiver_id != ADMIN_CHAT_ID:
        bot.send_message(ADMIN_CHAT_ID, f"–°—Ç–∏–∫–µ—Ä –æ—Ç @{message.from_user.username} (ID: {sender_id}) –∫ @{receiver_username} (ID: {receiver_id}):")
        bot.send_sticker(ADMIN_CHAT_ID, sticker_file_id)
      else:
        bot.send_message(ADMIN_CHAT_ID, f"–°—Ç–∏–∫–µ—Ä –æ—Ç @{message.from_user.username} (ID: {sender_id}) –∫ #–ü—Ä–æ—Å–ª—É—à–∫–∞–ë–°–û–®1:")
        bot.send_sticker(ADMIN_CHAT_ID, sticker_file_id)
      del user_states[receiver_id]
      del user_states[sender_id]
      return
  bot.send_message(sender_id, "–í–∞—à —Å—Ç–∏–∫–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
  bot.send_message(receiver_id, "–£ –≤–∞—Å –Ω–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
  bot.send_sticker(receiver_id, sticker_file_id,reply_markup=answer_button)
  if receiver_id != ADMIN_CHAT_ID:
    bot.send_message(ADMIN_CHAT_ID, f"–°—Ç–∏–∫–µ—Ä –æ—Ç @{message.from_user.username} (ID: {sender_id}) –∫ @{receiver_username} (ID: {receiver_id}):")
    bot.send_sticker(ADMIN_CHAT_ID, sticker_file_id)
  else:
    bot.send_message(ADMIN_CHAT_ID, f"–°—Ç–∏–∫–µ—Ä –æ—Ç @{message.from_user.username} (ID: {sender_id}) –∫ #–ü—Ä–æ—Å–ª—É—à–∫–∞–ë–°–û–®1:")
    bot.send_sticker(ADMIN_CHAT_ID, sticker_file_id)
  
  
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
  if call.data == "answer":
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–∏–ª –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    receiver_id = call.message.chat.id

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —á–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∏–ª–∏
    conn = sqlite3.connect('users.db')
    with conn:
      cursor = conn.cursor()
      cursor.execute('SELECT sender_id FROM messages WHERE receiver_id = ? ORDER BY message_id DESC LIMIT 1', (receiver_id,))
      sender_id = cursor.fetchone()
      if sender_id:
        sender_id = sender_id[0] # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ –∫–æ—Ä—Ç–µ–∂–∞
        
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å reply_markup –¥–ª—è –æ—Ç–≤–µ—Ç–∞ (–±–µ–∑ –∫–Ω–æ–ø–∫–∏ "–û—Ç–≤–µ—Ç–∏—Ç—å")
    bot.send_message(receiver_id, f"–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", reply_markup=telebot.types.ReplyKeyboardRemove())

    # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º ID –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è, –∞ –Ω–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    user_states[receiver_id] = sender_id
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–æ—Ç–∫–ª—é—á–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∫–Ω–æ–ø–∫—É)
    @bot.message_handler(func=lambda message: message.chat.id == receiver_id)
    def handle_reply_message(message):
      conn = sqlite3.connect('users.db')
      with conn:
        cursor = conn.cursor()
        cursor.execute('SELECT sender_id FROM messages WHERE receiver_id = ? ORDER BY message_id DESC LIMIT 1', (receiver_id,))
        sender_id = cursor.fetchone()[0]
        if sender_id:
          bot.send_message(sender_id, f"–û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.text}",reply_markup=telebot.types.ReplyKeyboardRemove())

      # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      print("JJJJJJJ")
      del user_states[receiver_id]

def get_username(user_id):
  conn = sqlite3.connect('users.db')
  with conn:
    cursor = conn.cursor()
    cursor.execute("SELECT username FROM users WHERE user_id = ?", (user_id,))
    result = cursor.fetchone()
    return result[0] if result else None

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞



  
bot.polling(none_stop=True)